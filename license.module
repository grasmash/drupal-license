<?php

/**
 * @file
 * Contains license.module..
 */

use Drupal\Core\Routing\RouteMatchInterface;
use Drupal\Core\Field\BaseFieldDefinition;
use Drupal\Core\Entity\EntityTypeInterface;

// License statuses.
define('LICENSE_CREATED', 0);
define('LICENSE_PENDING', 1);
define('LICENSE_ACTIVE', 2);
define('LICENSE_EXPIRED', 3);
define('LICENSE_SUSPENDED', 5);
define('LICENSE_REVOKED', 4);

/**
 * Implements hook_help().
 */
function license_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the license module.
    case 'help.page.license':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provides license type, which may be used to control user access to other entities.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_theme().
 */
function license_theme() {
  $theme = [];
  $theme['license'] = array(
    'render element' => 'elements',
    'file' => 'license.page.inc',
    'template' => 'license',
  );
  $theme['license_content_add_list'] = [
    'render element' => 'content',
    'variables' => ['content' => NULL],
    'file' => 'license.page.inc',
  ];
  return $theme;
}

/**
* Implements hook_theme_suggestions_HOOK().
*/
function license_theme_suggestions_license(array $variables) {
  $suggestions = array();
  $entity = $variables['elements']['#license'];
  $sanitized_view_mode = strtr($variables['elements']['#view_mode'], '.', '_');

  $suggestions[] = 'license__' . $sanitized_view_mode;
  $suggestions[] = 'license__' . $entity->bundle();
  $suggestions[] = 'license__' . $entity->bundle() . '__' . $sanitized_view_mode;
  $suggestions[] = 'license__' . $entity->id();
  $suggestions[] = 'license__' . $entity->id() . '__' . $sanitized_view_mode;
  return $suggestions;
}

/**
 * Implements hook_entity_access();
 */
function license_entity_access(\Drupal\Core\Entity\EntityInterface $entity, $operation, \Drupal\Core\Session\AccountInterface $account) {
  switch ($operation) {
    case 'view':

      /** @var Drupal\Core\Entity\EntityTypeBundleInfo $bundle_info_service */
      $bundle_info_service = \Drupal::service('entity_type.bundle.info');
      $license_bundle_info = $bundle_info_service->getBundleInfo('license');
      $license_type_keys = array_keys($license_bundle_info);

      // Check if current entity should be restricted by any license type.
      foreach ($license_type_keys as $license_type_key) {
        $license_type = $bundle_info_service->getBundleInfo($license_type_key);
        $target_entity_type = $license_type->get('target_entity_type');
        $target_bundles = $license_type->get('target_bundles');

        if ($entity->getEntityTypeId() == $target_entity_type) {
          // If entity should be restricted by this license type, compare bundles.
          if (in_array($entity->bundle(), $target_bundles)) {
            // Check access!
            return AccessResult::allowedIf($license_type->userCanViewLicensedEntity($account, $entity));

          }
        }
      }
  }

  return AccessResult::neutral();
}

// @todo Implement cron job to find active licenses after expiry date and change their status to expired.
